service: lambda-environment
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, "qa"} #quer dizer que se foi passado --stage pega o valor se nao vai default qa
  environment:
    ${file(./config/env.${self:provider.stage}.json)} #pega a variavel que foi definida
  iamRoleStatements:
    ${file(./config/serverless/db.iam.role.yml)}

custom:
  scheduleRate: rate(1 minute)
  enable: true
  tableName: ${self:provider.environment.DbTableName}
  dbWriteCapacityUnits: ${self:provider.environment.DbWriteCapacityUnits}
  dbReadCapacityUnits: ${self:provider.environment.DbReadCapacityUnits} 

resources:
  Resources:
    ${file(./config/serverless/resources/dynamo.hero.table.yml)}


functions:
  commit-message-scheduler:
    handler: handler.scheduler
    events:
      - schedule: ${self:custom.scheduleRate}
        # rate: ${self:custom.scheduleRate}
        # name: schedule-commit-message-${self:provider.stage}
        # description: get commit massage each minute
        # enable: ${self:custom.enable}